// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Fetch = require("bs-fetch/src/Fetch.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Config$ReactTemplate = require("../config.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function challenge_request(self) {
  var payload = { };
  payload["email"] = self[/* state */2][/* email */0];
  fetch(Config$ReactTemplate.api_url + "/get_challenge", Fetch.RequestInit[/* make */0](/* Some */[/* Post */2], /* Some */[{
                    "Content-Type": "application/json"
                  }], /* Some */[JSON.stringify(payload)], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* () */0)).then((function (res) {
            var match = +res.ok;
            return Promise.resolve(Curry._1(self[/* send */4], match !== 0 ? /* SEND_SUCCESS */1 : /* ERROR */Block.__(1, [/* Bad_Input */1])));
          })).catch((function () {
          return Promise.resolve(Curry._1(self[/* send */4], /* ERROR */Block.__(1, [/* Conns */0])));
        }));
  return /* () */0;
}

var component = ReasonReact.reducerComponent("Authenticator");

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      var match = self[/* state */2][/* send_state */1];
      var tmp;
      if (match) {
        var match$1 = match[0];
        tmp = typeof match$1 === "number" ? (
            match$1 !== 0 ? "Complte" : "Loading..."
          ) : "Failed";
      } else {
        tmp = "";
      }
      return React.createElement("div", undefined, React.createElement("h2", undefined, "Request a challenge to authenticate yourself."), React.createElement("label", undefined, "Email:", React.createElement("input", {
                          value: self[/* state */2][/* email */0],
                          onChange: (function (evt) {
                              var new_value = evt.target.value;
                              return Curry._1(self[/* send */4], /* SET_EMAIL */Block.__(0, [new_value]));
                            })
                        })), React.createElement("button", {
                      onClick: (function () {
                          return Curry._1(self[/* send */4], /* SEND */0);
                        })
                    }, "Request"), tmp);
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* email */"",
              /* send_state : None */0
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (typeof action === "number") {
        if (action === 0) {
          return /* UpdateWithSideEffects */Block.__(3, [
                    /* record */[
                      /* email */state[/* email */0],
                      /* send_state : Some */[/* Pending */0]
                    ],
                    challenge_request
                  ]);
        } else {
          return /* Update */Block.__(0, [/* record */[
                      /* email */state[/* email */0],
                      /* send_state : Some */[/* Success */1]
                    ]]);
        }
      } else if (action.tag) {
        throw [
              Caml_builtin_exceptions.match_failure,
              [
                "Authenticator.re",
                34,
                45
              ]
            ];
      } else {
        return /* Update */Block.__(0, [/* record */[
                    /* email */action[0],
                    /* send_state */state[/* send_state */1]
                  ]]);
      }
    });
  return newrecord;
}

exports.challenge_request = challenge_request;
exports.component = component;
exports.make = make;
/* component Not a pure module */
